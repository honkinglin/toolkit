{
  "tokenGenerator": {
    "title": "Token Generator",
    "description": "Generate secure random tokens with custom options",
    "uppercase": "Uppercase (ABC...)",
    "lowercase": "Lowercase (abc...)",
    "numbers": "Numbers (123...)",
    "symbols": "Symbols (!-...)",
    "length": "Length",
    "generatedToken": "Generated Token",
    "tokenPlaceholder": "Generated token will appear here...",
    "copy": "Copy",
    "refresh": "Refresh",
    "copySuccess": "Token copied to clipboard",
    "errorMessage": "Please select at least one character type"
  },
  "bcrypt": {
    "title": "Bcrypt",
    "description": "Hash and compare text strings using bcrypt. Bcrypt is a password hashing function based on the Blowfish cipher.",
    "hash": "Hash",
    "compareStringWithHash": "Compare string with hash",
    "yourString": "Your string:",
    "saltCount": "Salt rounds:",
    "yourStringPlaceholder": "Enter the string to hash...",
    "saltCountPlaceholder": "Salt rounds...",
    "copyHash": "Copy hash",
    "yourHash": "Your hash:",
    "yourStringToCompare": "Enter the string to compare...",
    "yourHashToCompare": "Enter the hash to compare...",
    "doTheyMatch": "Do they match?",
    "yes": "Yes",
    "no": "No",
    "hashCopied": "Hash copied to clipboard"
  },
  "hashText": {
    "title": "Hash Text",
    "description": "Hash text strings using common digest functions: MD5, SHA1, SHA256, SHA224, SHA512, SHA384, SHA3, RIPEMD160",
    "yourTextToHash": "Text to hash:",
    "placeholder": "Enter the string to hash...",
    "digestEncoding": "Digest encoding",
    "encodings": {
      "binary": "Binary (base 2)",
      "hexadecimal": "Hexadecimal (base 16)",
      "base64": "Base64 (base 64)",
      "base64url": "Base64url (base 64 with url safe chars)"
    },
    "hashCopied": "Hash copied to clipboard"
  },
  "encryptDecryptText": {
    "title": "Encrypt/Decrypt Text",
    "description": "Encrypt and decrypt text using encryption algorithms like AES, TripleDES, Rabbit or RC4.",
    "encrypt": "Encrypt",
    "decrypt": "Decrypt",
    "yourText": "Your text:",
    "yourSecretKey": "Your secret key:",
    "encryptionAlgorithm": "Encryption algorithm:",
    "yourTextEncrypted": "Your encrypted text:",
    "yourEncryptedText": "Your encrypted text:",
    "yourDecryptedText": "Your decrypted text:",
    "textPlaceholder": "String to encrypt",
    "encryptedTextPlaceholder": "Encrypted string to decrypt",
    "secretKeyPlaceholder": "Enter your secret key",
    "hashPlaceholder": "Your encrypted result",
    "errorWhileDecrypting": "Error while decrypting",
    "unableToDecrypt": "Unable to decrypt your text"
  },
  "bip39Generator": {
    "title": "BIP39 Passphrase Generator",
    "description": "Generate BIP39 passphrase from existing or random mnemonic, or get entropy data from passphrase for memory aid.",
    "language": "Language:",
    "entropy": "Entropy (seed):",
    "passphrase": "Passphrase (mnemonic):",
    "refresh": "Refresh",
    "copy": "Copy",
    "generateNew": "Generate New",
    "entropyPlaceholder": "Enter entropy in hex format",
    "passphrasePlaceholder": "Enter BIP39 mnemonic",
    "invalidEntropy": "Invalid entropy format",
    "invalidMnemonic": "Invalid mnemonic",
    "entropyCopied": "Entropy copied to clipboard",
    "passphraseCopied": "Mnemonic copied to clipboard"
  },
  "hmacGenerator": {
    "title": "HMAC Generator",
    "description": "Compute hash-based message authentication code (HMAC) with secret key and your preferred hash algorithm.",
    "plainText": "Plain text to hash",
    "secretKey": "Secret key",
    "hashingFunction": "Hashing function",
    "outputEncoding": "Output encoding",
    "hmacResult": "HMAC of your text",
    "plainTextPlaceholder": "Plain text to hash...",
    "secretKeyPlaceholder": "Enter secret key...",
    "resultPlaceholder": "Result of HMAC...",
    "copyHMAC": "Copy HMAC",
    "hmacCopied": "HMAC copied to clipboard"
  },
  "rsaKeyPairGenerator": {
    "title": "RSA Key Pair Generator",
    "description": "Generate new random RSA private and public key pem certificates.",
    "bits": "Bits:",
    "refreshKeyPair": "Refresh Key Pair",
    "publicKey": "Public Key",
    "privateKey": "Private Key",
    "generating": "Generating...",
    "bitsValidation": "Bits should be between 256 and 16384 and must be a multiple of 8",
    "generationError": "Failed to generate key pair",
    "publicKeyCopied": "Public key copied to clipboard",
    "privateKeyCopied": "Private key copied to clipboard"
  },
  "passwordStrengthAnalyzer": {
    "title": "Password Strength Analyzer",
    "description": "Discover the strength of your password with this password strength analyzer and crack time estimation tool.",
    "passwordPlaceholder": "Enter password...",
    "crackDuration": "Time required to crack this password using brute force",
    "passwordLength": "Password length:",
    "entropy": "Entropy:",
    "characterSetSize": "Character set size:",
    "score": "Score:",
    "note": "Note:",
    "noteText": "The calculated strength is based on the time required to crack the password using brute force methods, it does not take into account the possibility of dictionary attacks."
  }
}