{
  "home": {
    "title": "Developer Toolkit",
    "subtitle": "A collection of practical tools for developers and technical professionals",
    "description": "Including encryption/decryption, data conversion, code generation and other practical tools",
    "featuredTools": "Featured Tools",
    "stats": {
      "totalTools": "Total Tools",
      "categories": "Categories",
      "freeToUse": "Free to Use",
      "available": "Available"
    },
    "badges": {
      "recommended": "Recommended",
      "addToFavorites": "Add to Favorites",
      "removeFromFavorites": "Remove from Favorites"
    },
    "categories": {
      "crypto": "Cryptography",
      "generator": "Generators",
      "security": "Security",
      "converter": "Converters"
    },
    "tools": {
      "token-generator": {
        "title": "Token Generator",
        "description": "Generate random strings using the characters you want, uppercase or lowercase letters, numbers and/or symbols."
      },
      "hash-text": {
        "title": "Hash Text",
        "description": "Hash text strings using desired functions: MD5, SHA1, SHA256, SHA224, SHA512..."
      },
      "bcrypt": {
        "title": "Bcrypt",
        "description": "Hash and compare text strings using bcrypt. Bcrypt is a password hashing function based on the Blowfish cipher..."
      },
      "uuids-generator": {
        "title": "UUIDs Generator",
        "description": "A Universally Unique Identifier (UUID) is a 128-bit number used to identify information in computer systems."
      },
      "ulid-generator": {
        "title": "ULID Generator",
        "description": "Generate random Universally Unique Lexicographically Sortable Identifiers (ULID)"
      },
      "encrypt-decrypt-text": {
        "title": "Encrypt/Decrypt Text",
        "description": "Encrypt and decrypt text plaintext using encryption algorithms (such as AES, TripleDES, Rabbit or RC4)."
      },
      "bip39-generator": {
        "title": "BIP39 Passphrase Generator",
        "description": "Generate BIP39 passphrases from existing or random mnemonics, or get mnemonics from passphrases."
      },
      "hmac-generator": {
        "title": "HMAC Generator",
        "description": "Compute Hash-based Message Authentication Code (HMAC) using keys and hash-based hash algorithms."
      },
      "rsa-key-pair-generator": {
        "title": "RSA Key Pair Generator",
        "description": "Generate new random RSA private and public key pem certificates."
      },
      "password-strength-analyzer": {
        "title": "Password Strength Analyzer",
        "description": "Use this password strength analyzer and crack time estimation tool to discover password strength."
      }
    }
  },
  "sidebar": {
    "crypto": "Crypto",
    "tokenGenerator": "Token generator",
    "hashText": "Hash text",
    "bcrypt": "Bcrypt",
    "uuidsGenerator": "UUIDs generator",
    "ulidGenerator": "ULID generator",
    "encryptDecryptText": "Encrypt / decrypt text",
    "bip39PassphraseGenerator": "BIP39 passphrase generator",
    "hmacGenerator": "Hmac generator",
    "rsaKeyPairGenerator": "RSA key pair generator",
    "passwordStrengthAnalyzer": "Password strength analyzer",
    "converter": "Converter",
    "dateTimeConverter": "Date Time Converter",
    "integerBaseConverter": "Integer Base Converter",
    "romanNumeralConverter": "Roman Numeral Converter",
    "base64StringEncodeDecode": "Base64 String Encode/Decode",
    "base64FileConverter": "Base64 File Converter",
    "colorPicker": "Color Picker",
    "caseConverter": "Case Converter",
    "textToNatoAlphabet": "Text to NATO Alphabet",
    "textToAsciiBinary": "Text to ASCII Binary",
    "textToUnicode": "Text to Unicode",
    "yamlToJson": "YAML to JSON",
    "yamlToToml": "YAML to TOML",
    "jsonToYaml": "JSON to YAML",
    "jsonToToml": "JSON to TOML",
    "listConverter": "List Converter",
    "tomlToJson": "TOML to JSON",
    "tomlToYaml": "TOML to YAML",
    "xmlToJson": "XML to JSON",
    "jsonToXml": "JSON to XML",
    "markdownToHtml": "Markdown to HTML"
  },
  "tokenGenerator": {
    "title": "Token Generator",
    "description": "Generate secure random tokens with customizable options",
    "uppercase": "Uppercase (ABC...)",
    "lowercase": "Lowercase (abc...)",
    "numbers": "Numbers (123...)",
    "symbols": "Symbols (!-...)",
    "length": "Length",
    "generatedToken": "Generated Token",
    "tokenPlaceholder": "Generated token will appear here...",
    "copy": "Copy",
    "refresh": "Refresh",
    "copySuccess": "Token copied to clipboard",
    "errorMessage": "Please select at least one character type"
  },
  "bcrypt": {
    "title": "Bcrypt",
    "description": "Hash and compare passwords using bcrypt. Bcrypt is a secure password hashing function based on the Blowfish cipher.",
    "hash": "Hash",
    "compareStringWithHash": "Compare string with hash",
    "yourString": "Your string:",
    "saltCount": "Salt count:",
    "yourStringPlaceholder": "Your string to bcrypt...",
    "saltCountPlaceholder": "Salt rounds...",
    "copyHash": "Copy hash",
    "yourHash": "Your hash:",
    "yourStringToCompare": "Your string to compare...",
    "yourHashToCompare": "Your hash to compare...",
    "doTheyMatch": "Do they match?",
    "yes": "Yes",
    "no": "No",
    "hashCopied": "Hash copied to clipboard"
  },
  "hashText": {
    "title": "Hash Text",
    "description": "Hash text using common digest functions: MD5, SHA1, SHA256, SHA224, SHA512, SHA384, SHA3, RIPEMD160",
    "yourTextToHash": "Your text to hash:",
    "placeholder": "Your string to hash...",
    "digestEncoding": "Digest encoding",
    "encodings": {
      "binary": "Binary (base 2)",
      "hexadecimal": "Hexadecimal (base 16)",
      "base64": "Base64 (base 64)",
      "base64url": "Base64url (base 64 with url safe chars)"
    },
    "hashCopied": "Hash copied to clipboard"
  },
  "uuidsGenerator": {
    "title": "UUIDs Generator",
    "description": "A universally unique identifier (UUID) is a 128-bit number used to identify information in computer systems. The number of possible UUIDs is 16^32, which is 2^128 or about 3.4x10^38 (which is a very large number!).",
    "uuidVersion": "UUID version",
    "quantity": "Quantity",
    "namespace": "Namespace",
    "name": "Name",
    "namespacePlaceholder": "Namespace",
    "namePlaceholder": "Name",
    "uuidPlaceholder": "Your UUIDs",
    "copy": "Copy",
    "refresh": "Refresh",
    "uuidsCopied": "UUIDs copied to the clipboard",
    "invalidUuid": "Invalid UUID"
  },
  "ulidGenerator": {
    "title": "ULID Generator",
    "description": "Generate random machine-readable universally unique lexicographically sortable identifiers (ULID).",
    "quantity": "Quantity:",
    "format": "Format:",
    "refresh": "Refresh",
    "copy": "Copy",
    "ulidsCopied": "ULIDs copied to the clipboard"
  },
  "encryptDecryptText": {
    "title": "Encrypt/Decrypt Text",
    "description": "Encrypt and decrypt text using various algorithms (like AES, TripleDES, Rabbit, RC4).",
    "encrypt": "Encrypt",
    "decrypt": "Decrypt",
    "yourText": "Your text:",
    "yourSecretKey": "Your secret key:",
    "encryptionAlgorithm": "Encryption algorithm:",
    "yourTextEncrypted": "Your text encrypted:",
    "yourEncryptedText": "Your encrypted text:",
    "yourDecryptedText": "Your decrypted text:",
    "textPlaceholder": "The string to encrypt",
    "encryptedTextPlaceholder": "The encrypted string to decrypt",
    "secretKeyPlaceholder": "Enter your secret key",
    "hashPlaceholder": "Your encrypted result",
    "errorWhileDecrypting": "Error while decrypting",
    "unableToDecrypt": "Unable to decrypt your text"
  },
  "bip39Generator": {
    "title": "BIP39 Passphrase Generator",
    "description": "Generate BIP39 mnemonic passphrases from existing entropy or random generation, or get entropy from mnemonic for help.",
    "language": "Language:",
    "entropy": "Entropy (seed):",
    "passphrase": "Passphrase (mnemonic):",
    "refresh": "Refresh",
    "copy": "Copy",
    "generateNew": "Generate New",
    "entropyPlaceholder": "Enter entropy in hex format",
    "passphrasePlaceholder": "Enter BIP39 mnemonic passphrase",
    "invalidEntropy": "Invalid entropy format",
    "invalidMnemonic": "Invalid mnemonic passphrase",
    "entropyCopied": "Entropy copied to clipboard",
    "passphraseCopied": "Passphrase copied to clipboard"
  },
  "hmacGenerator": {
    "title": "HMAC Generator",
    "description": "Generate Hash-based Message Authentication Code (HMAC) using your preferred hashing algorithm.",
    "plainText": "Plain text to compute the hash",
    "secretKey": "Secret key",
    "hashingFunction": "Hashing function",
    "outputEncoding": "Output encoding",
    "hmacResult": "HMAC of your text",
    "plainTextPlaceholder": "Plain text to compute the hash...",
    "secretKeyPlaceholder": "Enter the secret key...",
    "resultPlaceholder": "The result of the HMAC...",
    "copyHMAC": "Copy HMAC",
    "hmacCopied": "HMAC copied to clipboard"
  },
  "rsaKeyPairGenerator": {
    "title": "RSA Key Pair Generator",
    "description": "Generate new and secure RSA key pairs with optional PEM passphrase.",
    "bits": "Bits:",
    "refreshKeyPair": "Refresh key-pair",
    "publicKey": "Public key",
    "privateKey": "Private key",
    "generating": "Generating...",
    "bitsValidation": "Bits should be 256 <= bits <= 16384 and be a multiple of 8",
    "generationError": "Failed to generate key pair",
    "publicKeyCopied": "Public key copied to clipboard",
    "privateKeyCopied": "Private key copied to clipboard"
  },
  "passwordStrengthAnalyzer": {
    "title": "Password Strength Analyzer",
    "description": "Use this password strength analyzer and breach time estimation tool to check your password strength.",
    "passwordPlaceholder": "Enter a password...",
    "crackDuration": "Duration to crack this password with brute force",
    "passwordLength": "Password length:",
    "entropy": "Entropy:",
    "characterSetSize": "Character set size:",
    "score": "Score:",
    "note": "Note:",
    "noteText": "The computed strength is based on the time it would take to crack the password using a brute force approach, it does not take into account the possibility of a dictionary attack."
  },
  "dateTimeConverter": {
    "inputPlaceholder": "Put your date string here...",
    "invalidDateError": "This date is invalid for this format",
    "invalidDatePlaceholder": "Invalid date..."
  },
  "integerBaseConverter": {
    "inputNumber": "Input number",
    "inputBase": "Input base",
    "inputNumberPlaceholder": "Put your number here (ex: 42)",
    "binary": "Binary (2)",
    "octal": "Octal (8)",
    "decimal": "Decimal (10)",
    "hexadecimal": "Hexadecimal (16)",
    "base64": "Base64 (64)",
    "custom": "Custom:"
  }
}